@startuml

!function $any_is_valid_( $any_target )
    !if $get_object_type_( $get_current_object_() ) == "func"
        ' 関数レベルで描画するモードであれば有効
        !return %true()
    !else
        ' 引数anyがtrue
        !if ( $any_target == %true() )
            !return %true()
        !else
            !return %false()
        !endif
    !endif
!endfunction

' コールを描画するならtrue
!function $call_display_is_valid_( $to="" )
    !if $get_object_type_( $get_current_object_() ) == "func"
        ' 関数レベルで描画するモードであれば有効
        !return %true()
    !else
        ' 引数anyがtrue
        !if ( $sdlConf_display_detail_unfocused_element_for_call == %true() )
            !return %true()
        !else
            !if ( $get_from_object_() == $get_to_object_( $to ) )
                !return %false()
            !else
                !return %true()
            !endif
        !endif
    !endif
!endfunction

' altを描画するならtrue
!function $alt_display_is_valid_()
    !return $any_is_valid_( $sdlConf_display_detail_unfocused_element_for_alt )
!endfunction

' loopを描画するならtrue
!function $loop_display_is_valid_()
    !return $any_is_valid_( $sdlConf_display_detail_unfocused_element_for_loop )
!endfunction

' stepを描画するならtrue
!function $step_display_is_valid_()
    !return $any_is_valid_( $sdlConf_display_detail_unfocused_element_for_step )
!endfunction

' 空のreturnを描画するならtrue
!function $void_return_display_is_valid_()
    !return $sdlConf_display_void_return
!endfunction

' 最初にreturnが現れた時点でライフラインをinactiveにする設定を有効にする場合true
!function $inactivate_in_first_return()
    !return $sdlConf_inactivate_in_first_return
!endfunction

' 同じライフライン上の場合returnをメッセージ(矢印)ではなく文字列で表示する場合はtrue
!function $on_same_lifeline_return_is_displayed_as_string()
    !return $sdlConf_on_same_lifeline_return_is_displayed_as_string
!endfunction

' 既にdeactivateされたライフライン(return2重コール等)で処理を実施するために、強制的にactivateする
!procedure $activate_when_already_inactivated()
    !if $call_display_is_valid_()
        !if ( ( $get_current_object_() != "" ) && ( $get_value_in_current_stack( "already_inactivated" ) ) )
            ?-[#00000000]-> $get_current_object_() ++
            $set_value_in_current_stack( "already_inactivated", %false() )
        !endif
    !endif
!endprocedure

' callを描画
!procedure $generate_call_( $to, $message )
    $activate_when_already_inactivated()

    !if $call_display_is_valid_( $to )
        $get_from_object_() -> $get_to_object_( $to ) ++ : $message()
    !endif
!endprocedure

' returnを描画
!procedure $generate_return_( $message = "" )
    !if $call_display_is_valid_( $get_value_in_prev_stack( "func" ) )
        ' 同じライフライン上の場合returnをメッセージ(矢印)ではなく文字列で表示する場合
        !if ( $on_same_lifeline_return_is_displayed_as_string() && ( $get_from_object_() == $get_to_object_() ) )
            !$allow = "-[#00000000]->"
            !$message = "**return** " + $message
        ' 同じライフラインであってもメッセージ(矢印)として表示する場合
        !else
            !$allow = "-->"
        !endif

        ' 最初にreturnが現れた時点でdeactivateする設定の場合 かつ まだdeactivateされていない
        !if ( $inactivate_in_first_return() && %not($get_value_in_current_stack( "already_inactivated" )) )
            $get_from_object_() $allow $get_to_object_() -- : $message
            $set_value_in_current_stack( "already_inactivated", %true() )
        ' 明示的なreturnではdeactivateしない設定の場合 または 既にreturnされている場合
        !else
            ' メッセージのみ描画し、deactivateはしない
            $get_from_object_() $allow $get_to_object_() : $message
        !endif
        $set_value_in_current_stack( "return_called", %true() )
    !endif
!endprocedure

' 関数の終了を描画
!procedure $generate_function_end_()
    !if $call_display_is_valid_( $get_value_in_prev_stack( "func" ) )
        ' まだinactivateされていない
        !if %not($get_value_in_current_stack( "already_inactivated" ))
            ' returnが一度も呼ばれてない かつ 空のreturnを描画する設定であれば、returnメッセージを描画
            !if ( %not($get_value_in_current_stack( "return_called" )) && $void_return_display_is_valid_() )
                ' ただし、同じライフライン上の場合returnをメッセージ(矢印)ではなく文字列で表示する場合は描画しない
                !if ( $on_same_lifeline_return_is_displayed_as_string() && ( $get_from_object_() == $get_to_object_() ) )
                    !$allow = "-[#00000000]->"
                !else
                    !$allow = "-->"
                !endif
            ' returnが既に呼ばれている または 空のreturnを描画しない設定であれば、deactivateのみ実施し描画しない
            !else
                !$allow = "-[#00000000]->"
            !endif
            $get_from_object_() $allow $get_to_object_() -- 
        !endif
    !endif
!endprocedure

' altを描画
!procedure $generate_alt_( $statement )
    $activate_when_already_inactivated()

    !if $alt_display_is_valid_()
        $statement
    !endif
!endprocedure

' loopを描画
!procedure $generate_loop_( $statement )
    $activate_when_already_inactivated()

    !if $loop_display_is_valid_()
        $statement
    !endif
!endprocedure

' stepを描画
!procedure $generate_step_( $string )
    $activate_when_already_inactivated()

    !if $step_display_is_valid_()
        hnote over $get_current_object_() : $string
    !endif
!endprocedure


@enduml
